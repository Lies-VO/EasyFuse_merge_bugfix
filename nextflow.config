profiles {
  conda { params.enable_conda = true }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  test {
    //params.reference = "$baseDir/test_data/ucsc.hg19.minimal.fasta"
    timeline.enabled = false
    report.enabled = false
    trace.enabled = false
    dag.enabled = false
  }
}

// Export this variable to prevent local Python libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

VERSION = '2.0.0a1'

manifest {
  name = 'TRON-Bioinformatics/easy-fuse-workflow'
  author = 'Patrick Sorn, Jonas Ibn-Salem, Christoph HolstrÃ¤ter, David Weber, Pablo Riesgo Ferreiro'
  homePage = 'https://github.com/TRON-Bioinformatics/easy-fuse-workflow'
  description = 'EasyFuse workflow'
  mainScript = 'main.nf'
  nextflowVersion = '>=19.10.0'
  version = VERSION
}


params.help = false
params.index = false
params.input_files = false
params.reference = false
params.chromosome_dir = "/projects/data/human/ensembl/GRCh38.86/fasta"
params.bowtie_index = "/projects/data/human/ensembl/GRCh38.86/bowtie_index/hg38"
params.star_index = "/projects/data/human/ensembl/GRCh38.86/STAR_idx/"
params.gtf = "/projects/data/human/ensembl/GRCh38.86/Homo_sapiens.GRCh38.86.gtf"
params.fusioncatcher_index = "/scratch/info/data/easyfuse/easyfuse_ref/fusioncatcher_index/"
params.starfusion_index = "/projects/data/human/ensembl/GRCh38.86/starfusion_index/"
params.output = false
params.annotation_db = "/projects/data/human/ensembl/GRCh38.86/Homo_sapiens.GRCh38.86.gff3.db"
params.fasta = "/projects/data/human/ensembl/GRCh38.86/Homo_sapiens.GRCh38.dna.primary_assembly.fa"
params.reference_tsl = "/projects/data/human/ensembl/GRCh38.86/Homo_sapiens.GRCh38.86.gtf.tsl"



params.help_message = """
EasyFuse workflow v${VERSION}

Usage:
    nextflow run tron-bioinformatics/easy-fuse-workflow -profile conda --input_files input_files [--reference reference.fasta]

Input:
    * input_files: the path to a tab-separated values file containing in each row the sample name, FASTQ 1 and FASTQ 2 files.
    The input file does not have header!
    Example input file:
    name1	fastq1	fastq2
    name2	fastq1	fastq2
    * reference: path to the FASTA genome reference (indexes expected *.fai, *.dict)

Optional input:
    *

Output:
    * Output
    """
